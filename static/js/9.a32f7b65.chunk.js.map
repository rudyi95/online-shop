{"version":3,"sources":["pages/signUp/style.ts","pages/signUp/index.tsx"],"names":["useStyles","makeStyles","root","height","display","justifyContent","alignItems","marginBottom","padding","paddingBottom","backgroundColor","border","outline","borderBottom","borderBottomColor","fontWeight","color","opacity","marginTop","fontSize","letterSpacing","borderRadius","cursor","container","flexDirection","width","avatar","headText","textAlign","items","withRouter","classes","dispatch","useAppDispatch","formik","useFormik","initialValues","email","username","password","name","firstname","lastname","address","city","street","number","zipcode","geolocation","lat","long","phone","onSubmit","value","addUser","className","handleSubmit","TextField","id","type","placeholder","onChange","handleChange","values","Button","variant"],"mappings":"8LAEaA,EAAYC,YAAW,CAClCC,KAAM,CACJC,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SAEZ,yBAA0B,CACxBC,aAAc,GACdC,QAAS,UACTC,cAAe,EACfC,gBAAiB,cACjBC,OAAQ,kBACRC,QAAS,OACTC,aAAc,cACdC,kBAAmB,OACnBC,WAAY,IACZC,MAAO,UACPC,QAAS,KAEX,WAAY,CACVT,QAAS,YACTU,UAAW,GACXN,QAAS,OACTD,OAAQ,OACRQ,SAAU,SACVJ,WAAY,IACZK,cAAe,EACfC,aAAc,EACdC,OAAQ,UACRN,MAAO,OACP,UAAW,CACTL,OAAQ,UAIdY,UAAW,CACTnB,QAAS,OACToB,cAAe,SACflB,WAAY,SACZD,eAAgB,SAChBG,QAAS,aACTE,gBAAiB,OACjBW,aAAc,MACdI,MAAO,OACPtB,OAAQ,QAEVuB,OAAQ,CACNnB,aAAc,IAEhBoB,SAAU,CACRpB,aAAc,GACda,cAAe,EACfQ,UAAW,SACXX,QAAS,IAGXY,MAAO,CACLzB,QAAS,OACToB,cAAe,Y,OCgCJM,uBAnFD,WACZ,IAAMC,EAAU/B,IACVgC,EAAWC,cAEXC,EAASC,YAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,GACVC,SAAU,GACVC,KAAM,CACJC,UAAW,GACXC,SAAU,IAEZC,QAAS,CACPC,KAAM,GACNC,OAAQ,GACRC,OAAQ,EACRC,QAAS,GACTC,YAAa,CACXC,IAAK,GACLC,KAAM,KAGVC,MAAO,IAETC,SAAU,SAACC,GACTrB,EAASsB,YAAQD,OAGrB,OACE,qBAAKE,UAAWxB,EAAQ7B,KAAxB,SACE,uBAAMkD,SAAUlB,EAAOsB,aAAcD,UAAWxB,EAAQR,UAAxD,UACE,qBAAKgC,UAAWxB,EAAQJ,SAAxB,0EACA,sBAAK4B,UAAWxB,EAAQF,MAAxB,UACE,cAAC4B,EAAA,EAAD,CACEC,GAAG,iBACHlB,KAAK,iBACLmB,KAAK,OACLC,YAAY,aACZC,SAAU3B,EAAO4B,aACjBT,MAAOnB,EAAO6B,OAAOvB,KAAKC,YAE5B,cAACgB,EAAA,EAAD,CACEC,GAAG,WACHlB,KAAK,WACLmB,KAAK,OACLC,YAAY,WACZC,SAAU3B,EAAO4B,aACjBT,MAAOnB,EAAO6B,OAAOzB,WAEvB,cAACmB,EAAA,EAAD,CACEC,GAAG,gBACHlB,KAAK,gBACLmB,KAAK,OACLC,YAAY,YACZC,SAAU3B,EAAO4B,aACjBT,MAAOnB,EAAO6B,OAAOvB,KAAKE,WAE5B,cAACe,EAAA,EAAD,CACEC,GAAG,QACHlB,KAAK,QACLmB,KAAK,QACLC,YAAY,QACZC,SAAU3B,EAAO4B,aACjBT,MAAOnB,EAAO6B,OAAO1B,QAEvB,cAACoB,EAAA,EAAD,CACEC,GAAG,WACHlB,KAAK,WACLmB,KAAK,WACLC,YAAY,WACZC,SAAU3B,EAAO4B,aACjBT,MAAOnB,EAAO6B,OAAOxB,WAEvB,cAACyB,EAAA,EAAD,CAAQC,QAAQ,WAAWjD,MAAM,UAAU2C,KAAK,SAAhD","file":"static/js/9.a32f7b65.chunk.js","sourcesContent":["import { makeStyles } from \"@mui/styles\";\n\nexport const useStyles = makeStyles({\n  root: {\n    height: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n\n    \"& .MuiFormControl-root\": {\n      marginBottom: 30,\n      padding: \"2px 0px\",\n      paddingBottom: 5,\n      backgroundColor: \"transparent\",\n      border: \"none !important\",\n      outline: \"none\",\n      borderBottom: \"1.5px solid\",\n      borderBottomColor: \"grey\",\n      fontWeight: 700,\n      color: \"#585858\",\n      opacity: 0.55,\n    },\n    \"& button\": {\n      padding: \"20px 30px\",\n      marginTop: 30,\n      outline: \"none\",\n      border: \"none\",\n      fontSize: \"medium\",\n      fontWeight: 600,\n      letterSpacing: 5,\n      borderRadius: 5,\n      cursor: \"pointer\",\n      color: \"grey\",\n      '&:hover': {\n        border: 'none',\n      },\n    },\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: \"50px 100px\",\n    backgroundColor: \"#fff\",\n    borderRadius: \"5px\",\n    width: \"25em\",\n    height: \"40em\",\n  },\n  avatar: {\n    marginBottom: 10,\n  },\n  headText: {\n    marginBottom: 50,\n    letterSpacing: 5,\n    textAlign: \"center\",\n    opacity: 0.5,\n  },\n\n  items: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n});\n","import React from \"react\";\nimport { useFormik } from \"formik\";\nimport { TextField, Button } from \"@mui/material\";\nimport { withRouter } from \"react-router\";\n\nimport { useAppDispatch } from \"../../redux/hooks/redux\";\nimport { addUser } from \"../../redux/services/userService\";\n\nimport { useStyles } from \"./style\";\n\nconst Login = () => {\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      name: {\n        firstname: \"\",\n        lastname: \"\",\n      },\n      address: {\n        city: \"\",\n        street: \"\",\n        number: 0,\n        zipcode: \"\",\n        geolocation: {\n          lat: \"\",\n          long: \"\",\n        },\n      },\n      phone: \"\",\n    },\n    onSubmit: (value: User) => {\n      dispatch(addUser(value));\n    },\n  });\n  return (\n    <div className={classes.root}>\n      <form onSubmit={formik.handleSubmit} className={classes.container}>\n        <div className={classes.headText}>Реєстрація</div>\n        <div className={classes.items}>\n          <TextField\n            id=\"name.firstname\"\n            name=\"name.firstname\"\n            type=\"text\"\n            placeholder=\"First Name\"\n            onChange={formik.handleChange}\n            value={formik.values.name.firstname}\n          />\n          <TextField\n            id=\"username\"\n            name=\"username\"\n            type=\"text\"\n            placeholder=\"Username\"\n            onChange={formik.handleChange}\n            value={formik.values.username}\n          />\n          <TextField\n            id=\"name.lastname\"\n            name=\"name.lastname\"\n            type=\"text\"\n            placeholder=\"Last Name\"\n            onChange={formik.handleChange}\n            value={formik.values.name.lastname}\n          />\n          <TextField\n            id=\"email\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n          />\n          <TextField\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={formik.handleChange}\n            value={formik.values.password}\n          />\n          <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n            Зареєструватися\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default withRouter(Login);\n"],"sourceRoot":""}