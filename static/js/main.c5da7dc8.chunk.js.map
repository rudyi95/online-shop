{"version":3,"sources":["redux/reducers/auth.ts","redux/reducers/products.ts","redux/reducers/user.ts","redux/store.ts","App.tsx","index.tsx","redux/services/productsService.ts","utils/helpers/apiWrapper.ts","api/productsApi.ts","api/loginApi.ts","api/userApi.ts","api/api.ts","redux/services/loginService.ts","redux/services/userService.ts","redux/services/storageService.ts","redux/reducers/order.ts","redux/reducers/cart.ts"],"names":["loginSlice","createSlice","name","initialState","loginData","username","password","token","loading","success","error","reducers","extraReducers","postLogin","fulfilled","type","state","action","payload","pending","rejected","product","undefined","products","productsSlice","getAllProducts","getAllProductsInCategory","getProductById","userSlice","addUser","rootReducer","combineReducers","order","login","cart","user","Layout","React","lazy","theme","createTheme","App","store","configureStore","reducer","ThemeProvider","fallback","Collapse","ReactDOM","render","document","getElementById","createAsyncThunk","_","thunkApi","a","api","res","rejectWithValue","message","category","getProductInCategory","id","BASE_CONNECTION","axios","create","baseURL","apiWrapper","method","url","data","get","post","put","delete","productsApi","loginApi","productApi","userApi","storageService","set","logout","remove","key","value","localStorage","setItem","JSON","stringify","obj","getItem","parse","removeItem","clear","findById","finding","find","item","filterById","filtering","filter","orderSlice","checkedOutItems","changeOrderItems","cartSlice","cartItems","showCartDialog","changeCartItems","showDialog"],"mappings":"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","file":"static/js/main.c5da7dc8.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { postLogin } from \"../services/loginService\";\n\ninterface IProps {\n  loginData: {\n    username: string;\n    password: string;\n  };\n  token: string;\n  loading: boolean;\n  success: boolean;\n  error: string;\n}\n\nexport const initialState: IProps = {\n  loginData: {\n    username: \"\",\n    password: \"\",\n  },\n  token: \"\",\n  loading: false,\n  success: false,\n  error: \"\",\n};\n\nexport const loginSlice = createSlice({\n  name: \"login\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [postLogin.fulfilled.type]: (state, action: PayloadAction<string>) => {\n      state.loading = false;\n      state.error = \"\";\n      state.token = action.payload;\n      state.success = true;\n    },\n    [postLogin.pending.type]: (state) => {\n      state.loading = true;\n    },\n    [postLogin.rejected.type]: (state, action: PayloadAction<string>) => {\n      state.loading = false;\n      state.token = \"\";\n      state.error = action.payload;\n      state.success = false;\n    },\n  },\n});\n\nexport default loginSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { Product } from \"../../types/products\";\nimport {\n  getAllProducts,\n  getAllProductsInCategory,\n  getProductById,\n} from \"../services/productsService\";\n\ninterface IProps {\n  product?: Product;\n  products: Product[];\n  loading: boolean;\n  success: boolean;\n  error: string;\n}\n\nexport const initialState: IProps = {\n  product: undefined,\n  products: [],\n  loading: false,\n  success: false,\n  error: \"\",\n};\n\nexport const productsSlice = createSlice({\n  name: \"products\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getAllProducts.fulfilled.type]: (\n      state,\n      action: PayloadAction<Product[]>\n    ) => {\n      state.loading = false;\n      state.error = \"\";\n      state.products = action.payload;\n      state.success = true;\n    },\n    [getAllProducts.pending.type]: (state) => {\n      state.loading = true;\n    },\n    [getAllProducts.rejected.type]: (state, action: PayloadAction<string>) => {\n      state.loading = false;\n      state.products = [];\n      state.error = action.payload;\n      state.success = false;\n    },\n\n    [getAllProductsInCategory.fulfilled.type]: (\n      state,\n      action: PayloadAction<Product[]>\n    ) => {\n      state.loading = false;\n      state.error = \"\";\n      state.products = action.payload;\n      state.success = true;\n    },\n    [getAllProductsInCategory.pending.type]: (state) => {\n      state.loading = true;\n    },\n    [getAllProductsInCategory.rejected.type]: (\n      state,\n      action: PayloadAction<string>\n    ) => {\n      state.loading = false;\n      state.products = [];\n      state.error = action.payload;\n      state.success = false;\n    },\n    \n    [getProductById.fulfilled.type]: (\n      state,\n      action: PayloadAction<Product>\n    ) => {\n      state.loading = false;\n      state.error = \"\";\n      state.product = action.payload;\n      state.success = true;\n    },\n    [getProductById.pending.type]: (state) => {\n      state.loading = true;\n    },\n    [getProductById.rejected.type]: (state, action: PayloadAction<string>) => {\n      state.loading = false;\n      state.product = undefined;\n      state.error = action.payload;\n      state.success = false;\n    },\n  },\n});\n\nexport default productsSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { addUser } from \"../services/userService\";\n\ninterface IProps {\n  loginData: {\n    username: string;\n    password: string;\n  };\n  token: string;\n  loading: boolean;\n  success: boolean;\n  error: string;\n}\n\nexport const initialState: IProps = {\n  loginData: {\n    username: \"\",\n    password: \"\",\n  },\n  token: \"\",\n  loading: false,\n  success: false,\n  error: \"\",\n};\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [addUser.fulfilled.type]: (state) => {\n      state.loading = false;\n      state.error = \"\";\n      state.success = true;\n    },\n    [addUser.pending.type]: (state) => {\n      state.loading = true;\n    },\n    [addUser.rejected.type]: (state, action: PayloadAction<string>) => {\n      state.loading = false;\n      state.token = \"\";\n      state.error = action.payload;\n      state.success = false;\n    },\n  },\n});\n\nexport default userSlice.reducer;\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\n\nimport order from \"./reducers/order\";\nimport login from \"./reducers/auth\";\nimport products from \"./reducers/products\";\nimport cart from \"./reducers/cart\";\nimport user from \"./reducers/user\";\n\nconst rootReducer = combineReducers({\n  order,\n  login,\n  products,\n  cart,\n  user,\n});\n\nexport const setupStore = () => {\n  return configureStore({\n    reducer: rootReducer,\n  });\n};\nexport type RootState = ReturnType<typeof rootReducer>;\nexport type AppStore = ReturnType<typeof setupStore>;\nexport type AppDispatch = AppStore[\"dispatch\"];\n","import React, { Suspense } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Collapse } from \"@mui/material\";\nimport { ThemeProvider, createTheme } from \"@mui/material\";\n\nimport { setupStore } from \"./redux/store\";\n\nimport \"./App.css\";\n\nconst Layout = React.lazy(() => import(\"./containers/layout\"));\n\nconst theme = createTheme();\n\nconst App = () => {\n  const store = setupStore();\n\n  return (\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <Provider store={store}>\n          <Suspense fallback={<Collapse />}>\n            <Layout />\n          </Suspense>\n        </Provider>\n      </ThemeProvider>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport api from \"../../api/api\";\n\nexport const getAllProducts = createAsyncThunk(\n  \"products/getAll\",\n  async (_, thunkApi) => {\n    try {\n      const res = await api.getAllProducts();\n      return res;\n    } catch (e) {\n      return thunkApi.rejectWithValue((e as Error).message);\n    }\n  }\n);\n\nexport const getAllProductsInCategory = createAsyncThunk(\n  \"products/getByCategory\",\n  async (category: string, thunkApi) => {\n    try {\n      const res = await api.getProductInCategory(category);\n      return res;\n    } catch (e) {\n      return thunkApi.rejectWithValue((e as Error).message);\n    }\n  }\n);\n\nexport const getProductById = createAsyncThunk(\n  \"products/getById\",\n  async (id: number, thunkApi) => {\n    try {\n      const res = await api.getProductById(id);\n      return res;\n    } catch (e) {\n      return thunkApi.rejectWithValue((e as Error).message);\n    }\n  }\n);\n","import axios from \"axios\";\n\ninterface IProps {\n  method: string;\n  url: string;\n  data?: any;\n}\nconst BASE_CONNECTION = axios.create({\n  baseURL: \"https://fakestoreapi.com\",\n});\n\nexport const apiWrapper = async <T>({ method, url, data }: IProps) => {\n  let res;\n  switch (method) {\n    case \"get\":\n      res = await BASE_CONNECTION.get<T>(url);\n      return res.data;\n    case \"post\":\n      res = await BASE_CONNECTION.post<T>(url, data);\n      return res.data;\n    case \"put\":\n      res = await BASE_CONNECTION.put<T>(url, data);\n      return res.data;\n    case \"delete\":\n      res = await BASE_CONNECTION.delete<T>(url);\n      return res.data;\n  }\n};\n","import { Product } from \"../types/products\";\nimport { apiWrapper } from \"../utils/helpers/apiWrapper\";\n\nconst productsApi = {\n  getAllProducts: () =>\n    apiWrapper<Product[]>({ method: \"get\", url: \"/products\" }),\n  getProductById: (id: number) =>\n    apiWrapper<Product>({ method: \"get\", url: `/products/${id}` }),\n  getProductInCategory: (category: string) =>\n    apiWrapper<Product[]>({\n      method: \"get\",\n      url: `/products/category/${category}`,\n    }),\n};\n\nexport default productsApi;\n","import { apiWrapper } from \"../utils/helpers/apiWrapper\";\n\nconst loginApi = {\n  login: (data: loginData) =>\n    apiWrapper<loginResponse>({ method: \"post\", url: \"/auth/login\", data }),\n};\n\nexport default loginApi;\n","import { apiWrapper } from \"../utils/helpers/apiWrapper\";\n\nconst loginApi = {\n  addUser: (data: User) =>\n    apiWrapper<User>({ method: \"post\", url: \"/users\", data }),\n};\n\nexport default loginApi;\n","import productApi from \"./productsApi\";\nimport loginApi from \"./loginApi\";\nimport userApi from \"./userApi\";\n\nconst api = {\n  ...productApi,\n  ...loginApi,\n  ...userApi,\n};\n\nexport default api;\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport api from \"../../api/api\";\nimport storageService from \"./storageService\";\n\nexport const postLogin = createAsyncThunk(\n  \"login/signIn\",\n  async (data: loginData, thunkApi) => {\n    try {\n      const res = await api.login(data);\n      if (res) storageService.set(\"token\", res);\n      return res;\n    } catch (e) {\n      return thunkApi.rejectWithValue((e as Error).message);\n    }\n  }\n);\n\nexport const logout = () => () => {\n  storageService.remove(\"token\");\n};\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport api from \"../../api/api\";\n\nexport const addUser = createAsyncThunk(\n  \"user/add\",\n  async (data: User, thunkApi) => {\n    try {\n      const res = await api.addUser(data);\n      return res;\n    } catch (e) {\n      return thunkApi.rejectWithValue((e as Error).message);\n    }\n  }\n);\n","const storageService = {\n  set<T>(key: string, value: T) {\n    localStorage.setItem(key, JSON.stringify(value));\n  },\n\n  get<T>(key: string): T | null {\n    const data: any = localStorage.getItem(key);\n\n    if (!data) return null;\n\n    let obj: T | null;\n\n    try {\n      obj = JSON.parse(data) as T;\n    } catch (error) {\n      obj = null;\n    }\n\n    return obj;\n  },\n\n  remove(key: string) {\n    localStorage.removeItem(key);\n  },\n\n  clear() {\n    localStorage.clear();\n  },\n\n  findById<T extends { id: number }>(finding: T[], id: number): T | undefined {\n    const res = finding.find((item: T) => item.id === id);\n    return res;\n  },\n\n  filterById<T extends { id: number }>(filtering: T[], id: number): T[] {\n    const res = filtering.filter((item: T) => item.id !== id);\n    return res;\n  },\n};\n\nexport default storageService;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface IProps {\n  checkedOutItems: Cart[];\n}\n\nexport const initialState: IProps = {\n  checkedOutItems: [],\n};\n\nexport const orderSlice = createSlice({\n  name: \"order\",\n  initialState,\n  reducers: {\n    changeOrderItems: (state, action: PayloadAction<Cart[]>) => {\n      state.checkedOutItems = action.payload;\n    },\n  },\n});\n\nexport default orderSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface IProps {\n  cartItems: Cart[];\n  showCartDialog: boolean;\n}\n\nexport const initialState: IProps = {\n  cartItems: [],\n  showCartDialog: false,\n};\n\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    changeCartItems: (state, action: PayloadAction<Cart[]>) => {\n      state.cartItems = action.payload;\n    },\n    showDialog: (state, action: PayloadAction<boolean>) => {\n      state.showCartDialog = action.payload;\n    },\n  },\n});\n\nexport default cartSlice.reducer;\n"],"sourceRoot":""}