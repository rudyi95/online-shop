{"version":3,"sources":["utils/helpers/apiWrapper.ts","api/productsApi.ts","api/api.ts","redux/actions/products/index.js","components/Paging/style.ts","context/ProductsContext.tsx","components/Paging/index.tsx","components/ProductsHeader/style.ts","components/ProductsHeader/index.tsx","components/Item/style.ts","components/Item/index.tsx","components/productList/style.ts","components/productList/index.tsx","pages/products/style.ts","pages/products/index.tsx"],"names":["BASE_CONNECTION","axios","create","baseURL","apiWrapper","method","url","data","get","post","put","delete","productsApi","getAllProducts","getProductById","id","getProductInCategory","category","api","productApi","dispatch","then","res","type","PRODUCTS","GET_ALL","payload","catch","err","console","log","GET_BY_ID","getProductsInCategory","GET_IN_CATEGORY","useStyles","makeStyles","root","display","justifyContent","alignItems","marginRight","next","marginLeft","ProductsContext","createContext","term","sortValue","itemsPerPage","usePriceFilter","showPopular","minPrice","maxPrice","page","totalLength","setCategory","setTerm","setSortValue","setUsePriceFilter","setShowPopular","setMinPrice","setMaxPrice","setPage","items","ProductsContextProvider","children","useState","setTotalLength","useCallback","SAMPLE_PRODUCTS","filter","item","price","popular","name","toLowerCase","includes","sortval","sort","a","b","sortByPrice","length","slice","Provider","value","Paging","classes","products","useContext","totalPages","Math","ceil","className","IconButton","color","disabled","onClick","ButtonIconType","firstPage","title","chevronLeft","Typography","variant","chevronRight","lastPage","header","margin","info","width","fontSize","results","marginTop","actions","priceBtn","withRouter","props","height","backgroundSize","actionArea","content","flexDirection","textAlign","itemImg","infoActions","position","top","promotion","fontWeight","padding","details","ItemCard","history","useHistory","useDispatch","Card","CardActionArea","push","ROUTES","productPage","CardContent","CardMedia","image","style","ActionButton","text","e","stopPropagation","addItemInCart","quantity","gridTemplateColumns","gap","ProductList","useParams","useSelector","state","useEffect","map","Item","overflow","whiteSpace","textOverflow"],"mappings":"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","file":"static/js/6.bb9ecb02.chunk.js","sourcesContent":["import axios from \"axios\";\n\ninterface IProps {\n  method: string;\n  url: string;\n  data?: any;\n}\nconst BASE_CONNECTION = axios.create({\n  baseURL: \"https://fakestoreapi.com\",\n});\n\nexport const apiWrapper = ({ method, url, data }: IProps) => {\n  switch (method) {\n    case \"get\":\n      return BASE_CONNECTION.get(url);\n    case \"post\":\n      return BASE_CONNECTION.post(url, data);\n    case \"put\":\n      return BASE_CONNECTION.put(url, data);\n    case \"delete\":\n      return BASE_CONNECTION.delete(url);\n    default:\n      return null;\n  }\n};\n","import { apiWrapper } from \"../utils/helpers/apiWrapper\";\n\nconst productsApi = {\n  getAllProducts: () => apiWrapper({ method: \"get\", url: \"/products\" }),\n  getProductById: (id: number) =>\n    apiWrapper({ method: \"get\", url: `/products/${id}` }),\n  getProductInCategory: (category: string) =>\n    apiWrapper({ method: \"get\", url: `/products/category/${category}` }),\n};\n\nexport default productsApi;\n","import productApi from \"./productsApi\";\n\nconst api = {\n  ...productApi,\n};\n\nexport default api;\n","import api from \"../../../api/api\";\nimport { PRODUCTS } from \"../types\";\n\nexport const getAllProducts = () => (dispatch) => {\n  api\n    .getAllProducts()\n    .then((res) => {\n      dispatch({\n        type: PRODUCTS.GET_ALL,\n        payload: res.data,\n      });\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const getProductById = (id) => (dispatch) => {\n  api\n    .getProductById(id)\n    .then((res) => {\n      dispatch({ type: PRODUCTS.GET_BY_ID, payload: res.data });\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const getProductsInCategory = (category) => (dispatch) => {\n  api.getProductInCategory(category).then((res) => {\n    dispatch({\n      type: PRODUCTS.GET_IN_CATEGORY,\n      payload: res.data,\n    });\n  });\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n\n    \"& button\": {\n      marginRight: 10,\n    },\n  },\n  next: {\n    marginLeft: 10,\n  },\n});\n","import React, { createContext, useCallback, useState } from \"react\";\nimport { SAMPLE_PRODUCTS } from \"../utils/services/constants\";\n\ntype TProductsContext = {\n  category: string;\n  setCategory: Function;\n  term: string;\n  setTerm: Function;\n  sortValue: string;\n  setSortValue: Function;\n  usePriceFilter: boolean;\n  setUsePriceFilter: Function;\n  showPopular: boolean;\n  setShowPopular: Function;\n  itemsPerPage: number;\n  minPrice: number;\n  setMinPrice: Function;\n  setMaxPrice: Function;\n  maxPrice: number;\n  page: number;\n  setPage: Function;\n  items: Function;\n  totalLength: number;\n};\n\nexport const ProductsContext = createContext<TProductsContext>({\n  category: \"popular\",\n  term: \"\",\n  sortValue: \"lh\",\n  itemsPerPage: 8,\n  usePriceFilter: false,\n  showPopular: false,\n  minPrice: 0,\n  maxPrice: 1000,\n  page: 1,\n  totalLength: 0,\n\n  setCategory: () => {},\n  setTerm: () => {},\n  setSortValue: () => {},\n  setUsePriceFilter: () => {},\n  setShowPopular: () => {},\n  setMinPrice: () => {},\n  setMaxPrice: () => {},\n  setPage: () => {},\n  items: () => {},\n});\n\nexport const ProductsContextProvider: React.FC<any> = ({ children }) => {\n  const [category, setCategory] = useState<string>(\"popular\");\n  const [term, setTerm] = useState<string>(\"\");\n  const [sortValue, setSortValue] = useState<string>(\"lh\");\n  const [itemsPerPage, setItemsPerPage] = useState<number>(8);\n  const [usePriceFilter, setUsePriceFilter] = useState<boolean>(false);\n  const [showPopular, setShowPopular] = useState<boolean>(false);\n  const [minPrice, setMinPrice] = useState<number>(0);\n  const [maxPrice, setMaxPrice] = useState<number>(1000);\n  const [page, setPage] = useState<number>(1);\n  const [totalLength, setTotalLength] = useState(0);\n\n  const sortByPrice = (data: any, sortval: any) => {\n    if (sortval !== \"lh\" && sortval !== \"hl\") return data;\n\n    let items = [...data];\n\n    if (sortval === \"lh\") {\n      items.sort((a, b) => a.price - b.price);\n    } else {\n      items.sort((a, b) => b.price - a.price);\n    }\n\n    return items;\n  };\n\n  const items = useCallback(() => {\n    let data = SAMPLE_PRODUCTS.filter((item) => {\n      if (\n        showPopular &&\n        (item.category === category || category === \"Усі категорії\")\n      ) {\n        return item.popular;\n      }\n      if (usePriceFilter && (item.price < minPrice || item.price > maxPrice)) {\n        return false;\n      }\n\n      if (category === \"popular\") {\n        return item.popular;\n      }\n\n      if (category !== \"Усі категорії\" && category !== item.category)\n        return false;\n\n      if (term && !item.name.toLowerCase().includes(term.toLowerCase()))\n        return false;\n\n      return true;\n    });\n\n    data = sortByPrice(data, sortValue);\n\n    setTotalLength(data.length);\n\n    data = data.slice((page - 1) * itemsPerPage, page * itemsPerPage);\n\n    return data;\n  }, [\n    showPopular,\n    category,\n    sortValue,\n    usePriceFilter,\n    minPrice,\n    maxPrice,\n    itemsPerPage,\n    page,\n    term,\n  ]);\n\n  return (\n    <ProductsContext.Provider\n      value={{\n        category,\n        term,\n        sortValue,\n        itemsPerPage,\n        usePriceFilter,\n        showPopular,\n        minPrice,\n        maxPrice,\n        page,\n        totalLength,\n        setTerm,\n\n        setCategory,\n        setSortValue,\n        setUsePriceFilter,\n        setShowPopular,\n        setMinPrice,\n        setMaxPrice,\n        setPage,\n        items,\n      }}\n    >\n      {children}\n    </ProductsContext.Provider>\n  );\n};\n//   let data = SAMPLE_PRODUCTS.filter((item) => {\n//     if (showPopular) {\n//       return false;\n//     }\n//     if (usePriceFilter && (item.price < minPrice || item.price > maxPrice)) {\n//       return false;\n//     }\n\n//     if (category === \"popular\") {\n//       return item.popular;\n//     }\n\n//     if (category !== \"Усі категорії\" && category !== item.category)\n//       return false;\n\n//     if (term && !item.name.toLowerCase().includes(term.toLowerCase()))\n//       return false;\n\n//     return true;\n//   });\n\n//   let totalLength = data.length;\n\n//   data = sortByPrice(data, sortValue);\n\n//   data = data.slice((page - 1) * itemsPerPage, page * itemsPerPage);\n\n//   resolve({ data, totalLength });\n","import React, { useContext } from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nimport IconButton from \"../common/buttons/IconButton\";\nimport { ButtonIconType } from \"../../types/enums\";\n\nimport { useStyles } from \"./style\";\nimport { ProductsContext } from \"../../context/ProductsContext\";\n\nconst Paging: React.FC = () => {\n  const classes = useStyles();\n\n  const products = useContext(ProductsContext);\n\n  const { page, setPage, itemsPerPage, totalLength } = products;\n\n  let totalPages = Math.ceil(totalLength / itemsPerPage);\n\n  if (!totalLength) return null;\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        color=\"primary\"\n        disabled={page === 1}\n        onClick={() => setPage(1)}\n        type={ButtonIconType.firstPage}\n        title=\"\"\n      />\n      <IconButton\n        color=\"primary\"\n        disabled={page === 1}\n        onClick={() => setPage(page - 1)}\n        type={ButtonIconType.chevronLeft}\n        title=\"\"\n      />\n      <Typography variant=\"body1\">\n        Сторінка {page} з {totalPages}\n      </Typography>\n      <IconButton\n        className={classes.next}\n        color=\"primary\"\n        disabled={page >= totalPages}\n        onClick={() => setPage(page + 1)}\n        type={ButtonIconType.chevronRight}\n        title=\"\"\n      />\n      <IconButton\n        color=\"primary\"\n        disabled={page >= totalPages}\n        onClick={() => setPage(totalPages)}\n        type={ButtonIconType.lastPage}\n        title=\"\"\n      />\n    </div>\n  );\n};\n\nexport default Paging;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles({\n  root: {},\n  header: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    margin: \"10px 0\",\n  },\n  info: {\n    width: \"44%\",\n    fontSize: 24,\n  },\n  results: {\n    fontSize: 12,\n    color: \"gray\",\n    marginTop: 5,\n  },\n  actions: {\n    width: \"44%\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  priceBtn: {\n      marginRight: 20,\n  }\n});\n","import React/* , { useContext, useState } */ from \"react\";\nimport { /* useLocation, */ withRouter } from \"react-router-dom\";\n// import {\n//   Button,\n//   Tooltip,\n//   MenuItem,\n//   Select,\n//   FormControlLabel,\n//   Checkbox,\n// } from \"@material-ui/core\";\n// import queryString from \"query-string\";\n\n// import PriceDialog from \"../PriceDialog\";\n\nimport { useStyles } from \"./style\";\n// import { ProductsContext } from \"../../context/ProductsContext\";\n\nconst ProductsHeader = (props: any) => {\n  const classes = useStyles();\n  // const location = useLocation();\n\n  // const [open, setOpen] = useState(false);\n  // const context: any = useContext(ProductsContext);\n  // const {\n  //   showPopular,\n  //   setShowPopular,\n  //   setUsePriceFilter,\n  //   usePriceFilter,\n  //   setSortValue,\n  //   sortValue,\n  //   setPage,\n  //   minPrice,\n  //   maxPrice,\n  //   setMinPrice,\n  //   setMaxPrice,\n  //   category,\n  //   totalLength,\n  // } = context;\n\n  // let keyword = queryString.parse(location.search).term;\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        {/* <div className={classes.info}>\n          <div>{category || \"Акційний товар\"}</div>\n          <span className={classes.results}>\n            {\" Результат\" +\n              (totalLength === 1 ? \" \" : \"и \") +\n              totalLength +\n              (keyword ? \" для \" : \"\")}\n          </span>\n          {keyword && <span className={classes.results}>{keyword}</span>}\n        </div> */}\n\n        <div className={classes.actions}>\n          {/* <FormControlLabel\n            control={\n              <Checkbox\n                color=\"primary\"\n                checked={showPopular}\n                onChange={(e) => {\n                  setShowPopular(e.target.checked);\n                }}\n              />\n            }\n            label=\"Акційна ціна\"\n          /> */}\n          {/* <FormControlLabel\n            control={\n              <Checkbox\n                color=\"primary\"\n                checked={usePriceFilter}\n                onChange={(e) => {\n                  setUsePriceFilter(e.target.checked);\n                  setPage(1);\n                }}\n              />\n            }\n            label=\"Фільтрувати за ціною\"\n          /> */}\n\n          {/* {usePriceFilter && (\n            <Tooltip title=\"Змінити діапазон цін\" disableFocusListener>\n              <Button\n                variant=\"outlined\"\n                className={classes.priceBtn}\n                onClick={() => setOpen(true)}\n              >\n                {minPrice + \"₴ - \" + maxPrice + \"₴\"}\n              </Button>\n            </Tooltip>\n          )} */}\n          {/* <Select\n            value={sortValue}\n            onChange={(e) => setSortValue(e.target.value)}\n          >\n            <MenuItem value={\"lh\"}>За зростанням ціни</MenuItem>\n            <MenuItem value={\"hl\"}>За спаданням ціни</MenuItem>\n          </Select> */}\n        </div>\n      </div>\n\n      {/* This is dialog which opens up for setting price filter */}\n      {/* <PriceDialog\n        open={open}\n        min={minPrice}\n        max={maxPrice}\n        onSave={(min: number, max: number) => {\n          setOpen(false);\n          setMinPrice(min);\n          setMaxPrice(max);\n          setPage(1);\n        }}\n        onClose={() => setOpen(false)}\n      /> */}\n    </div>\n  );\n};\n\nexport default withRouter(ProductsHeader);\n","import { makeStyles } from \"@mui/styles\";\n\nexport const useStyles = makeStyles({\n  root: {\n    width: 265,\n    height: 341,\n    margin: \"auto\",\n\n    \"& .MuiCardMedia-root\": {\n      width: \"100%\",\n      height: \"100%\",\n      backgroundSize: \"contain\",\n    },\n  },\n  actionArea: {\n    height: \"100%\",\n  },\n  content: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n  },\n  itemImg: {\n    width: 140,\n    height: 140,\n  },\n  infoActions: {\n    position: \"absolute\",\n    top: -10,\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  promotion: {\n    margin: 8,\n    color: \"#1a9349\",\n    fontWeight: \"bold\",\n  },\n  actions: {\n    height: 45,\n    justifyContent: \"space-around\",\n    padding: 10,\n  },\n  details: {\n    marginRight: 60,\n    marginLeft: 8,\n  },\n});\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n} from \"@mui/material\";\n\nimport ActionButton from \"../common/buttons/ActionButton\";\n\nimport { ROUTES } from \"../../utils/services/constants\";\nimport { addItemInCart } from \"../../redux/actions/index\";\nimport { Item } from \"../../types/products\";\n\nimport { useStyles } from \"./style\";\n\ninterface ItemProps {\n  className?: string;\n  item: Item;\n}\n\nconst ItemCard: React.FC<ItemProps> = ({ item }) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea\n        className={classes.actionArea}\n        onClick={() => history.push(ROUTES.productPage + item.id)}\n      >\n        <CardContent className={classes.content}>\n          <CardMedia className={classes.itemImg} image={item.image} />\n          <div>\n            <h3>{item.title}</h3>\n          </div>\n          <div className={classes.infoActions}>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                fontSize: \"large\",\n                fontWeight: \"bold\",\n              }}\n            >\n              {item.price} грн\n            </div>\n            <ActionButton\n              text={\"У кошик\"}\n              onClick={(e: any) => {\n                e.stopPropagation();\n                dispatch(addItemInCart({ ...item, quantity: 1 }));\n              }}\n            />\n          </div>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nexport default ItemCard;\n","import { makeStyles } from \"@mui/styles\";\n\nexport const useStyles = makeStyles({\n  root: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n    gap: \"1%\",\n  },\n});\n","import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAllProducts,\n  getProductsInCategory,\n} from \"../../redux/actions/products\";\n\nimport Item from \"../Item\";\n\nimport { useStyles } from \"./style\";\n\nconst ProductList: React.FC = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { category } = useParams<RouteParams>();\n\n  const items = useSelector((state: any) => state.products.data);\n\n  useEffect(() => {\n    if (!category || category === \"all\") {\n      dispatch(getAllProducts());\n    } else {\n      dispatch(getProductsInCategory(category));\n    }\n  }, [dispatch, category]);\n\n  return (\n    <div className={classes.root}>\n      {items.map((item: any) => {\n        return <Item key={item.id} item={item} />;\n      })}\n    </div>\n  );\n};\n\nexport default ProductList;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles({\n  root: {\n    height: \"100%\",\n    overflow: \"scroll\",\n\n    \"& .MuiTypography-displayBlock\": {\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n    },\n  },\n});\n","import React from \"react\";\n\nimport Paging from \"../../components/Paging\";\nimport ProductsHeader from \"../../components/ProductsHeader\";\nimport ProductsList from \"../../components/productList\";\n\nimport { ProductsContextProvider } from \"../../context/ProductsContext\";\n\nimport { useStyles } from \"./style\";\n\nconst ProductList: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <ProductsContextProvider>\n        <ProductsHeader />\n        <ProductsList />\n        <Paging />\n      </ProductsContextProvider>\n    </div>\n  );\n};\n\nexport default ProductList;\n"],"sourceRoot":""}